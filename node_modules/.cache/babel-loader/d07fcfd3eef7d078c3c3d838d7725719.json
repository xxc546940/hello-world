{"remainingRequest":"/Users/xuechengxue/Desktop/frontend/vue-crash-2021/node_modules/babel-loader/lib/index.js!/Users/xuechengxue/Desktop/frontend/vue-crash-2021/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/xuechengxue/Desktop/frontend/vue-crash-2021/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/xuechengxue/Desktop/frontend/vue-crash-2021/src/views/Home.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/xuechengxue/Desktop/frontend/vue-crash-2021/src/views/Home.vue","mtime":1636582173701},{"path":"/Users/xuechengxue/Desktop/frontend/vue-crash-2021/node_modules/cache-loader/dist/cjs.js","mtime":1636582459019},{"path":"/Users/xuechengxue/Desktop/frontend/vue-crash-2021/node_modules/babel-loader/lib/index.js","mtime":1636582460074},{"path":"/Users/xuechengxue/Desktop/frontend/vue-crash-2021/node_modules/cache-loader/dist/cjs.js","mtime":1636582459019},{"path":"/Users/xuechengxue/Desktop/frontend/vue-crash-2021/node_modules/vue-loader-v16/dist/index.js","mtime":1636582464602}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/xuechengxue/Desktop/frontend/vue-crash-2021/src/views/Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <AddTask v-show=\"showAddTask\" @add-task=\"addTask\" />\n  <Tasks\n    @toggle-reminder=\"toggleReminder\"\n    @delete-task=\"deleteTask\"\n    :tasks=\"tasks\"\n  />\n</template>\n\n<script>\nimport Tasks from '../components/Tasks'\nimport AddTask from '../components/AddTask'\nexport default {\n  name: 'Home',\n  props: {\n    showAddTask: Boolean,\n  },\n  components: {\n    Tasks,\n    AddTask,\n  },\n  data() {\n    return {\n      tasks: [],\n    }\n  },\n  methods: {\n    async addTask(task) {\n      const res = await fetch('api/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(task),\n      })\n\n      const data = await res.json()\n\n      this.tasks = [...this.tasks, data]\n    },\n    async deleteTask(id) {\n      if (confirm('Are you sure?')) {\n        const res = await fetch(`api/tasks/${id}`, {\n          method: 'DELETE',\n        })\n\n        res.status === 200\n          ? (this.tasks = this.tasks.filter((task) => task.id !== id))\n          : alert('Error deleting task')\n      }\n    },\n    async toggleReminder(id) {\n      const taskToToggle = await this.fetchTask(id)\n      const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n      const res = await fetch(`api/tasks/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(updTask),\n      })\n\n      const data = await res.json()\n\n      this.tasks = this.tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    },\n    async fetchTasks() {\n      const res = await fetch('api/tasks')\n\n      const data = await res.json()\n\n      return data\n    },\n    async fetchTask(id) {\n      const res = await fetch(`api/tasks/${id}`)\n\n      const data = await res.json()\n\n      return data\n    },\n  },\n  async created() {\n    this.tasks = await this.fetchTasks()\n  },\n}\n</script>\n"],"sourceRoot":""}]}